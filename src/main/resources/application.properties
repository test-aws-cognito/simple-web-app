################################################################################
# Application input parameters
################################################################################
application.hostname=localhost
application.port=12345
# Not necessary hostname:port. When in docker or using loadbalancer redirect must be external!
# Also make sure protocol is correct! Cogito requires HTTPS! (And above dev you should as well ;)
application.redirect-uri=http://${application.hostname}:${application.port}/login/oauth2/code/cognito
application.cognito.client-id=<cognito client id>
application.cognito.client-secret=<cognito client secret>
application.cognito.client-name=<cognito client name>
application.cognito.aws-region=<cognito aws region>
application.cognito.user-pool-id=<cognito user pool id>


################################################################################
# Application static configuration
# If possible configure only basic configuration fields
################################################################################
server.port=${application.port}

spring.security.oauth2.client.registration.cognito.provider=cognito
spring.security.oauth2.client.registration.cognito.client-id=${application.cognito.client-id}
spring.security.oauth2.client.registration.cognito.client-secret=${application.cognito.client-secret}
spring.security.oauth2.client.registration.cognito.client-name=${application.cognito.client-name}
spring.security.oauth2.client.registration.cognito.redirect-uri=${application.redirect-uri}
spring.security.oauth2.client.registration.cognito.scope=openid

spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.${application.cognito.aws-region}.amazonaws.com/${application.cognito.user-pool-id}
spring.security.oauth2.client.provider.cognito.user-name-attribute=cognito:username
